name: Build and Publish NuGet Packages

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  release:
    types: [ published ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Generate version from git tag
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="1.0.0-preview.${GITHUB_RUN_NUMBER}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $VERSION"

    - name: Pack NuGet packages
      run: |
        dotnet pack XmlSchemaClassGenerator/XmlSchemaClassGenerator.csproj \
          --configuration Release \
          --no-build \
          --include-symbols \
          --include-source \
          -p:PackageVersion=${{ steps.version.outputs.VERSION }} \
          --output ./artifacts
        
        dotnet pack XmlSchemaClassGenerator.Console/XmlSchemaClassGenerator.Console.csproj \
          --configuration Release \
          --no-build \
          --include-symbols \
          --include-source \
          -p:PackageVersion=${{ steps.version.outputs.VERSION }} \
          --output ./artifacts

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Publish to NuGet.org
      run: |
        dotnet nuget push "./artifacts/*.nupkg" \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate